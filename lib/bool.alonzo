-- STLC

#eval λ (x: T), x : T → T
#eval (λ (x: T → T),x) (λ (y: T), y) : T → T

abbrev bool := T → T → T
abbrev bool_to_bool := bool → bool
def true  : bool := λ (x: T), λ (y:T), x
def false : bool := λ (x: T) (y: T), y

#eval λ (t: T) (f: T), true t f : bool
#eval λ (t: T) (f: T), false t f : bool
#eval (λ (x: bool_to_bool), x) (λ (y: bool), y) : bool_to_bool
